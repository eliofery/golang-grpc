syntax = "proto3";

package microservice.v1;

option go_package = "github.com/eliofery/golang-fullstack/pkg/microservice/v1";

import "protoc-gen-openapiv2/options/annotations.proto";
import "buf/validate/validate.proto";
import "google/protobuf/wrappers.proto";

message GetUserRequest {
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
        json_schema: {
            title: "GetUserByIdRequest"
            description: "Request to get user by ID."
            required: ["number", "email", "password"]
        }
        external_docs: {
            url: "https://github.com/eliofery/golang-fullstack";
            description: "Документация по GetUserByIdRequest";
        }
        example: '{"number": "538","email": "test@mail.org","password": "123456"}'
    };

    int32 number = 1;
    string email = 2 [
        (buf.validate.field).string.email = true
    ];
}

message GetUserResponse {
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
        json_schema: {
            title: "GetUserByIdResponse"
            description: "Response to get user by ID."
            required: ["number", "email", "password"]
        }
        external_docs: {
            url: "https://github.com/eliofery/golang-fullstack";
            description: "Документация по GetUserByIdResponse";
        }
        example: '{"number": "538","email": "test@mail.org","password": "123456"}'
    };

    google.protobuf.StringValue result = 1;
}
