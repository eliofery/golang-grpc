syntax = "proto3";

package microservice.user.v2;

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "microservice/user/v2/request.proto";
import "microservice/user/v2/response.proto";

option go_package = "github.com/eliofery/golang-fullstack/pkg/microservice/user/v2";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "Главный заголовок API";
    version: "2.0";
    description: "Основное описание API";
    contact: {
      name: "Название проекта, Имя автора";
      url: "https://github.com/eliofery/golang-fullstack";
      email: "mail@example.site";
    };
    license: {
      name: "Название лицензии";
      url: "https://github.com/eliofery/golang-fullstack/blob/main/LICENSE";
    };
  };
  host: "localhost:8080";
  schemes: [
    HTTP,
    HTTPS
  ];
  consumes: [
    "application/json",
    "application/xml"
  ]; // request
  produces: [
    "application/json",
    "application/xml"
  ]; // response
};

service UserV2Service {
  rpc Get(GetRequest) returns (GetResponse) {
    option (google.api.http) = {
      post: "/v2/user"
      body: "*"
    };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Получение данных пользователя по его ID";
      operation_id: "Get";
      responses: {
        key: "200"
        value: {description: "OK Success"}
      },
      responses: {
        key: "404"
        value: {description: "Not found"}
      }
    };
  }
}
