syntax = "proto3";

package app.v1.user;

import "buf/validate/validate.proto";
import "google/protobuf/wrappers.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.com/eliofery/golang-grpc/pkg/api/app/v1/user";

message CreateUserRequest {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "CreateUserRequest"
      description: "Create user request"
      required: [
        "email",
        "password"
      ]
    }
  };

  google.protobuf.StringValue first_name = 1 [
    (buf.validate.field).string = {
      min_len: 2,
      max_len: 50,
    },
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "First name"
      description: "User first name must be 2 - 50 characters long"
      format: "sql.NullString"
      min_length: 2
      max_length: 50
    }
  ];

  google.protobuf.StringValue last_name = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    title: "Last name"
    description: "User last name must be 2 - 50 characters long"
    format: "sql.NullString"
    min_length: 2
    max_length: 50
  }];

  string email = 3 [
    (buf.validate.field).string.email = true,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "Email"
      description: "User email"
    }
  ];

  string password = 4 [
    (buf.validate.field) = {
      required: true,
      cel: {
        id: "password",
        message: "must be 8 - 72 characters long and only contain letters and digits",
        expression: "this.matches('^[-_ A-Za-z0-9]{8,72}$')"
      }
    },
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "Password"
      description: "User password must be 8 - 72 characters long and only contain letters and digits"
      pattern: "^[-_ A-Za-z0-9]{8,72}$"
      min_length: 8
      max_length: 72
    }
  ];
}
